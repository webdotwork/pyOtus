pipeline {
    agent any

    environment {
        PYTHON_ENV = '.venv'  // Specify your Python virtual environment directory
        ALLURE_RESULTS = 'allure-results'
        ALLURE_REPORT = 'allure-report'
    }

    stages {
        stage('Checkout Code') {
            steps {
                // Pull the source code from the master branch
                git branch: 'project', url: 'https://github.com/webdotwork/pyOtus.git'
            }
        }

        stage('Setup Environment') {
            steps {
                script {
                    // Clean up any existing environment
                    sh 'rm -rf $PYTHON_ENV'

                    // Create a new virtual environment
                    sh 'python3 -m venv $PYTHON_ENV'

                    // Install environment
                    sh './$PYTHON_ENV/bin/pip3 install -r requirements.txt'
                }
            }
        }

        stage('Run Tests with selenium and selenoid REGULAR USER') {
            steps {
                catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                    script {
                        // Run tests with pytest selenium + selenoid
                        sh '''
                            ./$PYTHON_ENV/bin/pytest --browser=chrome --headless --url=http://10.0.47.57:8081/ tests/OPENCART_REG_USER/ --alluredir=allure-results
                            ./$PYTHON_ENV/bin/pytest --browser=chrome --headless --url=http://10.0.47.57:8081/ tests/OPENCART_LOGIN/ --alluredir=allure-results
                        '''
                    }
                }
            }
        }

        stage('Run Tests with selenium and selenoid ADMINISTRATION') {
            steps {
                catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                    script {
                        // Run tests with pytest and selenium + seleniod
                        sh '''
                            ./$PYTHON_ENV/bin/pytest --browser=chrome --headless --url=http://10.0.47.57:8081/administration/ tests/OPENCART_ADMINISTRATOR/ --alluredir=allure-results
                        '''
                    }
                }
            }
        }

        stage('Run API Tests') {
            steps {
                catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                    script {
                        // Run API tests with pytest
                        sh '''
                            ./$PYTHON_ENV/bin/pytest tests/API/
                        '''
                    }
                }
            }
        }

        stage('Archive Allure Report') {
            steps {
                // Archive the Allure report as a Jenkins artifact
                archiveArtifacts artifacts: "$ALLURE_RESULTS/**", allowEmptyArchive: true
            }
        }

        stage('Pass Error Stage') {
            steps {
                script {
                    if (currentBuild.result == null || currentBuild.result == 'SUCCESS') {
                        echo 'Pipeline completed successfully.'
                    } else if (currentBuild.result == 'UNSTABLE') {
                        echo 'Some tests failed, but pipeline is marked as unstable.'
                    } else if (currentBuild.result == 'FAILURE') {
                        echo 'Pipeline failed due to an error.'
                    }
                }
            }
        }
    }
}
